spring.jpa:
  database: postgresql
  hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
  hibernate.ddl-auto: update
  properties.hibernate.format_sql: true
  show-sql: true


spring.datasource:
  hikari.maximum-pool-size: 4
  url: jdbc:postgresql://ec2-3-92-151-217.compute-1.amazonaws.com/devuenqg3hep6i
  username: wraqwpepktudje
  password: 8817038b397b70e1ed3a69c4ec7ff475e9d248dfcc6e8a754ce0254dc76f63f5
  platform: postgres
  driver-class-name: org.postgresql.Driver

jwt:
  secret-key: com.example.sns_2023_secret_key_com.example.sns_2023_secret_key
  # 30 days
  token.expired-time-ms: 2592000000

spring.redis.url: redis://:pac65b305e8e33ffe9c65b642287b78438333bcaa9cde064ead20cca5250a23cc@ec2-34-195-230-179.compute-1.amazonaws.com:30459


spring:
  kafka:
    properties:
      security.protocol: SASL_SSL            #클라우드카라프카를 쓰게되면 설정
      sasl.mechanism: SCRAM-SHA-256          #클라우드카라프카를 쓰게되면 설정
      sasl.jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username="uqivfdox" password="sUGzC5ltZMpfry6PMMIQgGgofmWEam6E";
    consumer:
      properties.spring.json.trusted.packages: "*"
      bootstrap-servers: 192.168.0.4:9094
      group-id: notification
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    listener:
      ack-mode: MANUAL
    producer:
      bootstrap-servers: 192.168.0.4:9094
      key-serializer: org.apache.kafka.common.serialization.IntegerSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties.enable.idempotence: false   #클라우드카라프카를 쓰게되면 설정
    topic:
      notification: uqivfdox-notification
